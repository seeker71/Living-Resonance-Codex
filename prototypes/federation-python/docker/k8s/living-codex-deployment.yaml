apiVersion: apps/v1
kind: Deployment
metadata:
  name: living-codex-ice
  labels:
    app: living-codex
    component: ice
    state: bootstrap
spec:
  replicas: 3
  selector:
    matchLabels:
      app: living-codex
      component: ice
  template:
    metadata:
      labels:
        app: living-codex
        component: ice
        state: bootstrap
    spec:
      containers:
      - name: ice-bootstrap
        image: living-codex:ice-latest
        imagePullPolicy: IfNotPresent
        env:
        - name: ICE_POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ICE_POD_STATE
          value: "ICE"
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 5000
          name: bootstrap
        volumeMounts:
        - name: ice-core
          mountPath: /app/ice_core
        - name: source-code
          mountPath: /app/src
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: ice-core
        persistentVolumeClaim:
          claimName: ice-core-pvc
      - name: source-code
        configMap:
          name: living-codex-source

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: living-codex-water
  labels:
    app: living-codex
    component: water
    state: service
spec:
  replicas: 5
  selector:
    matchLabels:
      app: living-codex
      component: water
  template:
    metadata:
      labels:
        app: living-codex
        component: water
        state: service
    spec:
      containers:
      - name: water-service
        image: living-codex:water-latest
        imagePullPolicy: IfNotPresent
        env:
        - name: WATER_POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WATER_POD_STATE
          value: "WATER"
        - name: WATER_POD_ROLE
          value: "web"
        ports:
        - containerPort: 5000
          name: web
        - containerPort: 8080
          name: health
        volumeMounts:
        - name: water-data
          mountPath: /app/data
        - name: water-logs
          mountPath: /app/logs
        - name: user-profiles
          mountPath: /app/user_profiles
        - name: contributions
          mountPath: /app/contributions
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: water-data
        persistentVolumeClaim:
          claimName: water-data-pvc
      - name: water-logs
        persistentVolumeClaim:
          claimName: water-logs-pvc
      - name: user-profiles
        persistentVolumeClaim:
          claimName: user-profiles-pvc
      - name: contributions
        persistentVolumeClaim:
          claimName: contributions-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: living-codex-vapor
  labels:
    app: living-codex
    component: vapor
    state: interaction
spec:
  replicas: 10
  selector:
    matchLabels:
      app: living-codex
      component: vapor
  template:
    metadata:
      labels:
        app: living-codex
        component: vapor
        state: interaction
    spec:
      containers:
      - name: vapor-interaction
        image: living-codex:vapor-latest
        imagePullPolicy: IfNotPresent
        env:
        - name: VAPOR_POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: VAPOR_POD_STATE
          value: "VAPOR"
        - name: VAPOR_POD_TTL
          value: "3600"
        - name: VAPOR_POD_CONTEXT
          value: "user-session"
        ports:
        - containerPort: 5002
          name: interaction
        - containerPort: 8081
          name: health
        volumeMounts:
        - name: vapor-temp
          mountPath: /app/temp
        - name: vapor-sessions
          mountPath: /app/sessions
        - name: vapor-cache
          mountPath: /app/cache
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 20
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: vapor-temp
        emptyDir: {}
      - name: vapor-sessions
        persistentVolumeClaim:
          claimName: vapor-sessions-pvc
      - name: vapor-cache
        persistentVolumeClaim:
          claimName: vapor-cache-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: living-codex-plasma
  labels:
    app: living-codex
    component: plasma
    state: streaming
spec:
  replicas: 3
  selector:
    matchLabels:
      app: living-codex
      component: plasma
  template:
    metadata:
      labels:
        app: living-codex
        component: plasma
        state: streaming
    spec:
      containers:
      - name: plasma-streaming
        image: living-codex:plasma-latest
        imagePullPolicy: IfNotPresent
        env:
        - name: PLASMA_POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PLASMA_POD_STATE
          value: "PLASMA"
        - name: PLASMA_POD_STREAMS
          value: "20"
        - name: PLASMA_POD_BANDWIDTH
          value: "2000"
        ports:
        - containerPort: 5003
          name: streaming
        - containerPort: 8082
          name: health
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: plasma-streams
          mountPath: /app/streams
        - name: plasma-events
          mountPath: /app/events
        - name: plasma-subscribers
          mountPath: /app/subscribers
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: plasma-streams
        persistentVolumeClaim:
          claimName: plasma-streams-pvc
      - name: plasma-events
        persistentVolumeClaim:
          claimName: plasma-events-pvc
      - name: plasma-subscribers
        persistentVolumeClaim:
          claimName: plasma-subscribers-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: living-codex-ice-service
  labels:
    app: living-codex
    component: ice
spec:
  selector:
    app: living-codex
    component: ice
  ports:
  - name: health
    port: 8080
    targetPort: 8080
  - name: bootstrap
    port: 5000
    targetPort: 5000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: living-codex-water-service
  labels:
    app: living-codex
    component: water
spec:
  selector:
    app: living-codex
    component: water
  ports:
  - name: web
    port: 80
    targetPort: 5000
  - name: health
    port: 8080
    targetPort: 8080
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: living-codex-vapor-service
  labels:
    app: living-codex
    component: vapor
spec:
  selector:
    app: living-codex
    component: vapor
  ports:
  - name: interaction
    port: 5002
    targetPort: 5002
  - name: health
    port: 8081
    targetPort: 8081
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: living-codex-plasma-service
  labels:
    app: living-codex
    component: plasma
spec:
  selector:
    app: living-codex
    component: plasma
  ports:
  - name: streaming
    port: 5003
    targetPort: 5003
  - name: health
    port: 8082
    targetPort: 8082
  - name: redis
    port: 6379
    targetPort: 6379
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: living-codex-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: living-codex.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: living-codex-water-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: living-codex-water-service
            port:
              number: 80
      - path: /interaction
        pathType: Prefix
        backend:
          service:
            name: living-codex-vapor-service
            port:
              number: 5002
      - path: /streaming
        pathType: Prefix
        backend:
          service:
            name: living-codex-plasma-service
            port:
              number: 5003
